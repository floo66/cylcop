% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_margin.R
\name{fit_lin_np}
\alias{fit_lin_np}
\title{Fit a Non-Parametric Linear Distribution}
\usage{
fit_lin_np(x, bandwidth = NULL, limits = c(-Inf, Inf))
}
\arguments{
\item{x}{\link[base]{numeric} \link[base]{vector} of measurements of a linear
random variable.}

\item{bandwidth}{\link[base]{numeric} value for the kernel density bandwidth.
Default is  \code{cylcop::\link{opt_lin_bw}(x, "nrd")}.}

\item{limits}{\link[base]{numeric} \link[base]{vector} of length 2, holding the
lower and upper limit of the interval to which x is theoretically constrained.}
}
\value{
A '\code{\link[stats]{density}}' object,
which is obtained with the function
\code{GoFKernel::\link[GoFKernel]{density.reflected}()} of the '\pkg{GoFKernel}'
package.
}
\description{
This function finds a  a kernel density estimate using
a Gaussian smoothing kernel. It is just a wrapper for
\code{GoFKernel::\link[GoFKernel]{density.reflected}()}.
}
\examples{
require(graphics)
set.seed(123)

silent_curr <- cylcop_get_option("silent")
cylcop_set_option(silent = TRUE)

n <- 100 #n (number of samples) is set small for performance.

x <- rweibull(n, shape = 10)

dens_non_param <- fit_lin_np(x = x, limits=c(0,Inf))

true_dens <- dweibull(seq(0, max(x), length.out = 200),
  shape = 10
)

plot(seq(0,max(x),length.out = 200), true_dens, type = "l")
lines(dens_non_param$x, dens_non_param$y, col = "red")

cylcop_set_option(silent = silent_curr)

}
\seealso{
\code{GoFKernel::\link[GoFKernel]{density.reflected}()},
\code{\link{fit_circ_param}()},\code{\link{fit_lin_np}()},
\code{\link{opt_lin_bw}()}.
}
