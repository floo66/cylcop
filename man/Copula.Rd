% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyl_cop_class.R, R/cyl_cubsec.R, R/cyl_gauss.R,
%   R/cyl_quadsec.R, R/cyl_rect_combine.R, R/cyl_rot_combine.R, R/cyl_vonmises.R
\name{Copula}
\alias{Copula}
\alias{rCopula}
\alias{dCopula}
\alias{pCopula}
\alias{dCopula,matrix,Copula-method}
\alias{rCopula,numeric,cyl_cubsec-method}
\alias{dCopula,matrix,cyl_cubsec-method}
\alias{pCopula,matrix,cyl_cubsec-method}
\alias{rCopula,numeric,cyl_gauss-method}
\alias{dCopula,matrix,cyl_gauss-method}
\alias{pCopula,matrix,cyl_gauss-method}
\alias{rCopula,numeric,cyl_quadsec-method}
\alias{dCopula,matrix,cyl_quadsec-method}
\alias{pCopula,matrix,cyl_quadsec-method}
\alias{rCopula,numeric,cyl_rect_combine-method}
\alias{dCopula,matrix,cyl_rect_combine-method}
\alias{pCopula,matrix,cyl_rect_combine-method}
\alias{rCopula,numeric,cyl_rot_combine-method}
\alias{dCopula,matrix,cyl_rot_combine-method}
\alias{pCopula,matrix,cyl_rot_combine-method}
\alias{rCopula,numeric,cyl_vonmises-method}
\alias{dCopula,matrix,cyl_vonmises-method}
\alias{pCopula,matrix,cyl_vonmises-method}
\title{Density, distribution, and random number generation for \code{cyl_copula} objects.}
\usage{
dCopula(u, copula, log=FALSE, ...)
pCopula(u, copula, ...)
rCopula(n, copula, ...)

\S4method{dCopula}{matrix,Copula}(u, copula)

\S4method{rCopula}{numeric,cyl_cubsec}(n, copula)

\S4method{dCopula}{matrix,cyl_cubsec}(u, copula)

\S4method{pCopula}{matrix,cyl_cubsec}(u, copula)

\S4method{rCopula}{numeric,cyl_gauss}(n, copula)

\S4method{dCopula}{matrix,cyl_gauss}(u, copula)

\S4method{pCopula}{matrix,cyl_gauss}(u, copula)

\S4method{rCopula}{numeric,cyl_quadsec}(n, copula)

\S4method{dCopula}{matrix,cyl_quadsec}(u, copula)

\S4method{pCopula}{matrix,cyl_quadsec}(u, copula)

\S4method{rCopula}{numeric,cyl_rect_combine}(n, copula)

\S4method{dCopula}{matrix,cyl_rect_combine}(u, copula)

\S4method{pCopula}{matrix,cyl_rect_combine}(u, copula)

\S4method{rCopula}{numeric,cyl_rot_combine}(n, copula)

\S4method{dCopula}{matrix,cyl_rot_combine}(u, copula)

\S4method{pCopula}{matrix,cyl_rot_combine}(u, copula)

\S4method{rCopula}{numeric,cyl_vonmises}(n, copula)

\S4method{dCopula}{matrix,cyl_vonmises}(u, copula)

\S4method{pCopula}{matrix,cyl_vonmises}(u, copula)
}
\arguments{
\item{u}{Matrix of numeric values in I^2, containing as first collumn the circular (periodic) and as second the linear dimension}

\item{copula}{An object of class \code{cyl_copula} or \code{Copula}.}

\item{n}{Number of random samples to be generated with \code{rCopula}.}

\item{log}{Logical indicating whether the logarithm of the density should be returned. For \code{cyl_copula} always \code{log = FALSE}.}

\item{...}{Further arguments}
}
\description{
These methods belong to the corresponding generics of the \code{copula} package.
}
\details{
WARNING!!!
The function dCopula is a special case, and cylcop::dCopula does not refer to the generic dCopula of the \code{copula} package.
The difference is that copula::dCopula() will return a density of 0 for points on the boundary, whereas cylcop::dCopula() will
return the correct density on the boundaries for both \code{cyl_copula} or \code{Copula} objects.
}
